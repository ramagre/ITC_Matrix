@using ITC_Matrix.Common;
@using PagedList;
@using PagedList.Mvc;

@model IPagedList<ITC_Matrix.Models.Meal>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Menu = "plans";
    ViewBag.SubMenu = "mealNode";
}

<section class="mainTable-right">
    @using (Html.BeginForm("Index", "Meal", FormMethod.Get))
    {
        <script src="~/Assets/JS/CustomDialog.js"></script>
        <script src="~/Assets/JS/Clients.js"></script>

        <section class="filterRow">
            <h3>@ITC_Matrix.Common.Functions.GetTranslation((int)CommonEnum.Translation.Meal_Types)</h3>
            <text>
                <h4 style="padding-bottom:5px;">@ITC_Matrix.Common.Functions.GetTranslation((int)CommonEnum.Translation.Sort_By)</h4>
            </text>
            <section class="fullwidth">
                <section class="row">
                    <section class="selectBy-sort">
                        <label class="customeFeild selectTag">
                            @Html.DropDownList("searchBy", new List<SelectListItem>
                                            {
                                                new SelectListItem { Text = "Code", Value = "1"},
                                                new SelectListItem { Text = "Description", Value = "2"},
                                            })
                        </label>
                    </section>
                    <section class="searchBy">
                        @Html.TextBox("search", "", new { @id = "search", @placeholder = "Search", @maxLength = 25 })
                    </section>
                    <section class="small-formBtn">
                        <input type="submit" value="Find" name="Search" class="pink-btn" />
                    </section>
                    <section class="small-formBtn">                       
                        <a href='@Url.Action("Index", "Meal")' value="Clear" class="blue-btn" data-toggle="tooltip" title="Clear Search">Clear</a>

                    </section>
                </section>
            </section>
        </section>
    }

    <section class="clear">&nbsp;</section>
    @if (ViewBag.MealMessage != null)
    {
        <section class="@ViewBag.Class">@ViewBag.MealMessage</section>
    }


    <table width="100%" border="0" cellspacing="0" cellpadding="0" class="gridTable tableFixed-none">
        <thead>
          
            <tr class="gridHeading">

                <th style="text-align:left;">@Html.ActionLink(@ITC_Matrix.Common.Functions.GetTranslation((int)CommonEnum.Translation.Code), "Index", new { sortBy = ViewBag.CodeSort, searchBy = Request.QueryString["searchBy"], txtSearch = Request.QueryString["search"] }, new { @class = "label" })</th>

                <th style="text-align:left;"> @Html.ActionLink(@ITC_Matrix.Common.Functions.GetTranslation((int)CommonEnum.Translation.Description), "Index", new { sortBy = ViewBag.DSCRSort, searchBy = Request.QueryString["searchBy"], txtSearch = Request.QueryString["search"] }, new { @class = "label" })</th>

                <th style="text-align:left;"> @Html.ActionLink(@ITC_Matrix.Common.Functions.GetTranslation((int)CommonEnum.Translation.From), "Index", new { sortBy = ViewBag.FromSort, searchBy = Request.QueryString["searchBy"], txtSearch = Request.QueryString["search"] }, new { @class = "label" })</th>

                <th style="text-align:left;" colspan="3"> @Html.ActionLink(@ITC_Matrix.Common.Functions.GetTranslation((int)CommonEnum.Translation.To), "Index", new { sortBy = ViewBag.ToSort, searchBy = Request.QueryString["searchBy"], txtSearch = Request.QueryString["search"] }, new { @class = "label" })</th>

            </tr>
        </thead>
        <tbody class="scrollContent">

            @if (Model.Count() == 0)
            {
                <tr>
                    <td colspan="2">
                        Sorry ! No Such Record Found
                    </td>
                </tr>
            }

            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.CODE)</td>
                    <td> @Html.DisplayFor(modelItem => item.DSCR)</td>


                    <td>
                        @{
                            if (item.FromTime != 0)
                            {
                                var fromTime = item.FromTime;
                                var fromHH = fromTime / 60;
                                var fromMM = fromTime % 60;
                                @Html.Raw(fromHH.ToString("00") + ":" + fromMM.ToString("00"));
                            }
                        }
                    </td>
                    <td>
                        @{
                            if (item.ToTime != 0)
                            {
                                var toTime = item.ToTime;
                                var toHH = toTime / 60;
                                var toMM = toTime % 60;
                                @Html.Raw(toHH.ToString("00") + ":" + toMM.ToString("00"));
                            }
                            }
                        </td>

                        <td width="40px"><a href="@Url.Action("Edit", "Meal", new { id = item.CODE })"><span class="edit_icon" data-toggle="tooltip" title="Click to edit this account type"></span></a></td>
                    @{ 
                        if (ViewBag.isPermission == false) {
                            <td width="40px"></td>
                        }
                        else
                        {
                            <td width="40px"><a class="lnkDelete" data-id="@item.CODE" href="@Url.Action("Delete", "Meal", new { id = item.CODE })"><span class="delete_icon" data-toggle="tooltip" title="Click to delete this account Type"></span></a></td>
                        }
                    }   
                    </tr>
                        }
                    </tbody>
                    <tfoot class="gridFooter">
                        <tr>
                            <td colspan="6">
                                <section class="floatLeft scroll-btns">
                                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request.QueryString["sortBy"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayItemSliceAndTotal = true })
                                </section>
                                <section class="floatRight">
                                    @{
                                        if (ViewBag.isPermission != false)
                                        {
                                            if (Model.Count() != 5)
                                            {
                                            <a href="/Meal/Create"><input type="button" class="orange-btn" value="Add New"></a>
                                                }
                                            }
                                        }
                                </section>
                            </td>
                        </tr>
                    </tfoot>

                </table>
            </section>
